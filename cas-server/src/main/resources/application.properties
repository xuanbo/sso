##
# CAS Web Application Embedded Server SSL Configuration
#
server.ssl.key-store=classpath:etc/cas/thekeystore
server.ssl.key-store-password=changeit
server.ssl.key-password=changeit
server.ssl.enabled=true

##
# CAS Web Application Embedded Server Configuration
#
server.port=8443
server.servlet.context-path=/cas
server.max-http-header-size=2097152
server.forward-headers-strategy=NATIVE
server.error.include-stacktrace=ALWAYS

server.compression.enabled=true
server.compression.mime-types=application/javascript,application/json,application/xml,text/html,text/xml,text/plain

##
# CAS Web Application Embedded Tomcat Configuration
#
server.tomcat.max-http-form-post-size=2097152
# server.tomcat.basedir=build/tomcat
server.tomcat.connection-timeout=PT20S
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
server.tomcat.accesslog.suffix=.log
server.tomcat.background-processor-delay=0s
server.tomcat.threads.min-spare=10
server.tomcat.threads.max=200

server.tomcat.remoteip.port-header=X-Forwarded-Port
server.tomcat.remoteip.protocol-header=X-Forwarded-Proto
server.tomcat.remoteip.protocol-header-https-value=https
server.tomcat.remoteip.remote-ip-header=X-FORWARDED-FOR

server.tomcat.uri-encoding=UTF-8
server.tomcat.additional-tld-skip-patterns=*.jar

##
# CAS Web Application JMX/Spring Configuration
#
spring.jmx.enabled=false

##
# CAS Web Application Http Encoding Configuration
#
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

##
# Allow configuration classes to override bean definitions from Spring Boot
#
spring.main.allow-bean-definition-overriding=true
spring.main.lazy-initialization=false

##
# CAS Cloud Bus Configuration
#
spring.cloud.bus.enabled=false

# Indicates that systemPropertiesOverride can be used. Set to false to prevent users from changing the default accidentally. Default true.
spring.cloud.config.allow-override=true

# External properties should override system properties.
spring.cloud.config.override-system-properties=false

# When allowOverride is true, external properties should take lowest priority, and not override any existing property sources (including local config files).
spring.cloud.config.override-none=false

# spring.cloud.bus.refresh.enabled=true
# spring.cloud.bus.env.enabled=true
# spring.cloud.bus.destination=CasCloudBus
# spring.cloud.bus.ack.enabled=true

##
# CAS Web Application Endpoints Security
#
management.endpoints.enabled-by-default=false

management.endpoint.shutdown.enabled=false
management.endpoint.restart.enabled=false

management.endpoints.web.base-path=/actuator

management.endpoints.web.exposure.include=info,health,status,configurationMetadata
management.endpoints.jmx.exposure.exclude=*

# management.endpoints.web.exposure.include=*
# management.endpoints.web.path-mapping.health=status
# management.endpoint.health.show-details=when_authorized

management.server.add-application-context-header=false

# Endpoint Security Basic Authentication
spring.security.user.name=casuser
# spring.security.user.password=
# spring.security.user.roles=

# Define a CAS-specific "WARN" status code and its order
management.endpoint.health.status.order=WARN,DOWN,OUT_OF_SERVICE,UNKNOWN,UP

# Define health indicator behavior (requires cas-server-core-monitor)
management.health.memoryHealthIndicator.enabled=true
# Define a default that doesn't require module /cas/actuator/health/ping serves as status
management.health.ping.enabled=true

# turn off health indicators by default
management.health.defaults.enabled=false
spring.cloud.discovery.client.composite-indicator.enabled=false

##
# CAS Web Application Session Configuration
#
server.servlet.session.timeout=PT30S
server.servlet.session.cookie.http-only=true
server.servlet.session.tracking-modes=COOKIE
##
# CAS Thymeleaf View Configuration
#
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=true
spring.thymeleaf.mode=HTML
spring.thymeleaf.template-resolver-order=100
spring.thymeleaf.prefix=classpath:/templates/

##
# CAS Log4j Configuration
#
# logging.config=file:/etc/cas/log4j2.xml
server.servlet.context-parameters.isLog4jAutoInitializationDisabled=true

##
# CAS Metrics Configuration
#
management.metrics.web.server.request.autotime.enabled=true

management.metrics.export.atlas.enabled=false
management.metrics.export.datadog.enabled=false
management.metrics.export.ganglia.enabled=false
management.metrics.export.graphite.enabled=false
management.metrics.export.influx.enabled=false
management.metrics.export.jmx.enabled=false
management.metrics.export.newrelic.enabled=false
management.metrics.export.prometheus.enabled=false
management.metrics.export.signalfx.enabled=false
management.metrics.export.statsd.enabled=false
management.metrics.export.wavefront.enabled=false
management.metrics.export.simple.enabled=true

management.metrics.enable.logback=true
management.metrics.enable.process.files=true
management.metrics.enable.system.cpu=true
management.metrics.enable.process.cpu=true
management.metrics.enable.process.uptime=true
management.metrics.enable.process.start.time=true

##
# CAS Swagger Configuration
#
springdoc.show-actuator=true
springdoc.model-and-view-allowed=true
springdoc.writer-with-default-pretty-printer=true
springdoc.swagger-ui.displayRequestDuration=true

##
# CAS AspectJ Configuration
#
spring.aop.auto=true
spring.aop.proxy-target-class=true

##
# CAS View Settings
#
cas.view.cas2.v3ForwardCompatible=true

##
# CAS Authentication Credentials
#
# cas.authn.accept.enabled=true
# cas.authn.accept.users=casuser::Mellon
# cas.authn.accept.name=Static Credentials

##
# MySQL 配置
mysql.url=jdbc:mysql://127.0.0.1:3306/sso?useSSL=false&useUnicode=true&characterEncoding=UTF-8
mysql.user=root
mysql.password=123456

##
# CAS Database authentication
# https://apereo.github.io/cas/6.3.x/installation/Database-Authentication.html
cas.authn.jdbc.query[0].name=accountAuthenticationHandler
cas.authn.jdbc.query[0].driverClass=com.mysql.cj.jdbc.Driver
cas.authn.jdbc.query[0].url=${mysql.url}
cas.authn.jdbc.query[0].user=${mysql.user}
cas.authn.jdbc.query[0].password=${mysql.password}

cas.authn.jdbc.query[0].sql=SELECT * FROM account WHERE username=?
cas.authn.jdbc.query[0].field-password=password
cas.authn.jdbc.query[0].field-expired=expired
cas.authn.jdbc.query[0].field-disabled=disabled

##
# CAS Password Management
# https://apereo.github.io/cas/6.3.x/password_management/Password-Management-JDBC.html
cas.authn.pm.enabled=true
cas.authn.pm.jdbc.driverClass=com.mysql.cj.jdbc.Driver
cas.authn.pm.jdbc.url=${mysql.url}
cas.authn.pm.jdbc.user=${mysql.user}
cas.authn.pm.jdbc.password=${mysql.password}
cas.authn.pm.jdbc.sql-security-questions=SELECT question, answer FROM question WHERE username=?
cas.authn.pm.jdbc.autocommit=true

cas.authn.pm.jdbc.sql-find-email=SELECT email FROM account WHERE username=?
cas.authn.pm.jdbc.sql-find-phone=SELECT phone FROM account WHERE username=?
cas.authn.pm.jdbc.sql-find-user=SELECT username FROM account WHERE email=?
cas.authn.pm.jdbc.sql-change-password=UPDATE account SET password=? WHERE username=?

# 发送邮件来源
cas.authn.pm.reset.mail.from=${spring.mail.username}
# 发送邮件标题
cas.authn.pm.reset.mail.subject=SSO 重置密码
# 邮件内容，必须要有%s，因为会生成一个连接并且带了token，否则无法打开链接，当然这个链接也和cas.server.prefix有关系
cas.authn.pm.reset.mail.text=打开以下链接重置您的密码（SSO）: %s
# token失效分钟数
cas.authn.pm.reset.expirationMinutes=10
# 是否开启问题回答
cas.authn.pm.reset.securityQuestionsEnabled=false

# 短信
# cas.authn.pm.reset.sms.from=${spring.mail.username}
# cas.authn.pm.reset.sms.subject=SSO 重置密码
# cas.authn.pm.reset.sms.text=打开以下链接重置您的密码（SSO）: %s
# cas.authn.pm.reset.sms.attributeName=mail

##
# CAS Forgot Username
cas.authn.pm.forgotUsername.mail.from=${spring.mail.username}
cas.authn.pm.forgotUsername.mail.subject=SSO 找回账号
cas.authn.pm.forgotUsername.mail.text=打开以下链接找回您的账号（SSO）: %s

##
# CAS 发送邮件
spring.mail.host=smtp.qq.com
spring.mail.port=465
# 邮箱用户名
spring.mail.username=1345545983@qq.com
# 邮箱授权码
spring.mail.password=rerbwncyyvvqjhif
spring.mail.testConnection=false
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.smtp.auth=true
# 必须ssl
spring.mail.properties.mail.smtp.ssl.enable=true

# 日志
logging.level.org.springframework.jdbc.core=DEBUG

##
# CAS 服务注册 - JPA
cas.service-registry.jpa.dialect=org.hibernate.dialect.MySQL8Dialect
cas.service-registry.jpa.driverClass=com.mysql.cj.jdbc.Driver
cas.service-registry.jpa.url=${mysql.url}
cas.service-registry.jpa.user=${mysql.user}
cas.service-registry.jpa.password=${mysql.password}
cas.service-registry.jpa.properties.hibernate.show-sql=true

##
# Spring Redis Session
spring.session.store-type=redis
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.database=0
spring.redis.password=
spring.redis.timeout=3000
spring.redis.lettuce.pool.max-active=16
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=4
spring.redis.lettuce.pool.max-wait=3000

##
# CAS Webflow
cas.webflow.always-pause-redirect=false
cas.webflow.refresh=true
cas.webflow.redirect-same-state=false
cas.webflow.autoconfigure=true

cas.webflow.session.lockTimeout=PT30S
cas.webflow.session.compress=false
cas.webflow.session.maxConversations=5
cas.webflow.session.storage=true

##
# CAS Redis Ticket Storage
cas.ticket.registry.redis.host=${spring.redis.host}
cas.ticket.registry.redis.port=${spring.redis.port}
cas.ticket.registry.redis.database=${spring.redis.database}
cas.ticket.registry.redis.password=${spring.redis.password}
cas.ticket.registry.redis.timeout=${spring.redis.timeout}
cas.ticket.registry.redis.pool.enabled=true
cas.ticket.registry.redis.pool.max-active=${spring.redis.lettuce.pool.max-active}
cas.ticket.registry.redis.pool.max-idle=${spring.redis.lettuce.pool.max-idle}
cas.ticket.registry.redis.pool.min-idle=${spring.redis.lettuce.pool.min-idle}
cas.ticket.registry.redis.pool.max-wait=${spring.redis.lettuce.pool.max-wait}

##
# CAS TGT Expiration Policy
# https://apereo.github.io/cas/6.3.x/configuration/Configuration-Properties.html#tgt-expiration-policy
#
# 当用户在2个小时（7200秒）之内不动移动鼠标或者进行系统超过8个小时（28800秒），则tgt过期
cas.ticket.tgt.max-time-to-live-in-seconds=28800
cas.ticket.tgt.time-to-kill-in-seconds=7200
cas.ticket.tgt.remember-me.enabled=true
cas.ticket.tgt.remember-me.time-to-kill-in-seconds=28800
cas.ticket.tgt.timeout.max-time-to-live-in-seconds=28800

# 防止自动更换加密key，导致重复服务后需要重新登录
cas.tgc.crypto.enabled=false
# 兼容 Http 协议
cas.tgc.secure=false
# cas.tgc.path=/

# 允许退出登录后重定向到其他页面
cas.logout.followServiceRedirects=true
# 是否移除子系统的票据
cas.logout.removeDescendantTickets=true
